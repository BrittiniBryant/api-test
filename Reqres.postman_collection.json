{
	"info": {
		"_postman_id": "719a96d9-2ddd-44c5-8250-80150193cc9a",
		"name": "Reqres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Users Are Successfully Listed\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 240ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct Page Data\", function () {  \r",
							"    pm.expect(jsonData.page).to.eql(2);\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users?page=2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Resources",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Resources Are Successfully Listed\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Correct Page Data\", function () {  \r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    pm.expect(jsonData.total_pages).to.eql(2)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/unknown",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Was Posted Successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"User's Name Showed Successfully In Response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Neo\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Neo\",\r\n    \"job\": \"The One\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Was Updated Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"User's Job Successfully Updated In The Response \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql(\"Programmer\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Neo\",\r\n    \"job\": \"Programmer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can Successfully Delete\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User Was Registered Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ID Matches Example Documentation\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/register",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Account Was NOT Registered\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Missing Password Error\", function () {\r",
							"    pm.response.to.have.body({\"error\":\"Missing password\"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"raven@fife\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/register",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Can Login Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected Token Was Received\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/login",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login Failed\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Missing Password Error\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"peter@klaven\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/login",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	]
}